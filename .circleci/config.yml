version: 2.1

orbs:
  docker: circleci/docker@0.5.1
  helm: circleci/helm@0.1.3

workflows:
  version: 2
  deploy:
    jobs:
      - deploy:
          context: variables
          filters:
            branches:
              only:
                - master
                - test

jobs:
  deploy:
    docker:
      - image: alpine/helm:2.13.0
    steps:
      - deploy:
          working_directory: "$PWD"
      
commands:
  deploy:
    parameters:
      working_directory:
        type: string
        default: "$PWD"
    steps:
      - checkout
      - run:
          name: Validate and Install Chart
          command: |
            apk update && apk add curl && apk add --no-cache bash git openssh
            cd << parameters.working_directory >>
            export PAGER=$(git diff-tree --no-commit-id --name-only -r HEAD)
            echo "Changed Components are  => $PAGER"
            export COMPONENT="NOTSET"
            for CHANGE in $PAGER; do ENV_DIR=${CHANGE%%/*}; done

            for CHANGE in $PAGER; do echo $CHANGE; done

            for CHANGE in $PAGER; do if [[ "${CHANGE%%/*}" != "."* ]] && [[ "$ENV_DIR" == "${CHANGE%%/*}" ]]; then export COMPONENT="$CHANGE"; elif [[ "${CHANGE%%/*}" != "."* ]]; then echo "Only one component per PR should be changed" && exit 1; else echo "Let it Go"; fi; done
            # for CHANGE in $PAGER; do if [[ "$ENV_DIR" == "${CHANGE%%/*}" ]]; then export COMPONENT="$CHANGE"; else echo "Only one component per PR should be changed" && exit 1; fi; done
            if [ "$COMPONENT" == "NOTSET" ]; then echo "No component is changed!" && exit 1;  fi
            echo "Initializing Component => $COMPONENT"
            echo $COMPONENT | cut -f1 -d"/"
            export COMPONENT_DIR="${COMPONENT%%/*}"
            echo "Changed Dir => $COMPONENT_DIR"
            cd $COMPONENT_DIR
            helm init --client-only
            helm repo add charts https://charts.tmt.tools --username $TMT_CHARTS_USERNAME --password $TMT_CHARTS_PASSWORD
            helm dep build
            helm package .
            FILENAME="$(find . \( -name "$COMPONENT*.tgz" \) -exec basename {} \;)"
            if [ "$FILENAME" == "" ]; then echo "No Chart Version Found!" && exit 1;  fi
            echo $FILENAME
            curl --user $TMT_CHARTS_USERNAME:$TMT_CHARTS_PASSWORD --data-binary "@$FILENAME" https://charts.tmt.tools/api/charts
